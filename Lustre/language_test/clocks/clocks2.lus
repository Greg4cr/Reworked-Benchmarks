
type choice = enum { One, Two };
type entier = int;

const PI = 3;

const choix = One;

node toto (x:int) returns (a:int;y:int)
var c : choice;b1, b2:entier;
let
  a = PI -> pre(a+1);
  c = if a=x then One else Two;
  -- b1 = 1 when One(c);
  b1 = if One(c) then 1 else pre(b1);
  -- b2 = 2 when Two(c);
  b2 = if Two(c) then 2 else pre(b2);
  y = merge c (One -> b1) (Two -> b2);
tel

node test (x:bool) returns (y:int)
var a:int; b:int;
let
   (a,b) = toto(if x then 0 else 1);
   y = a;
tel

