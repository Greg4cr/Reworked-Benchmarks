
node top(e01: bool; 
      e02: bool; 
      e03: bool; 
      e04: bool; 
      e05: bool; 
      e06: bool; 
      e07: bool; 
      e08: bool; 
      e09: bool; 
      e10: bool; 
      e11: bool; 
      e12: bool; 
      init_invalid: int)
   returns (OK: bool);

var
   DRAGON_g01: bool; 
   DRAGON_g02: bool; 
   DRAGON_g03: bool; 
   DRAGON_g04: bool; 
   DRAGON_g05: bool; 
   DRAGON_g06: bool; 
   DRAGON_g07: bool; 
   DRAGON_g08: bool; 
   DRAGON_g09: bool; 
   DRAGON_g10: bool; 
   DRAGON_g11: bool; 
   DRAGON_g12: bool; 
   DRAGON_mem_init: int; 
   DRAGON_exclusive: int; 
   DRAGON_shared: int; 
   DRAGON_shared_dirty: int; 
   DRAGON_dirty: int; 
   DRAGON_invalid: int; 
   Sofar_X: bool; 
   Sofar_Sofar: bool;


let 
   DRAGON_mem_init = (init_invalid -> (pre DRAGON_mem_init));

   DRAGON_g01 = ((((((pre DRAGON_invalid) >= 1) and 
      ((pre DRAGON_dirty) = 0)) and 
      ((pre DRAGON_shared) = 0)) and 
      ((pre DRAGON_exclusive) = 0)) and 
      ((pre DRAGON_shared_dirty) = 0));

   DRAGON_g02 = (((pre DRAGON_invalid) >= 1) and 
      ((((((pre DRAGON_dirty) + 1) + (pre DRAGON_shared)) + (pre DRAGON_exclusive)) + (pre DRAGON_shared_dirty)) >= 1));

   DRAGON_g03 = ((pre DRAGON_exclusive) >= 1);

   DRAGON_g04 = (((pre DRAGON_shared_dirty) = 1) and 
      ((pre DRAGON_shared) = 0));

   DRAGON_g05 = (((pre DRAGON_shared_dirty) = 0) and 
      ((pre DRAGON_shared) = 1));

   DRAGON_g06 = (((pre DRAGON_shared_dirty) + (pre DRAGON_shared)) >= 2);

   DRAGON_g07 = ((((((pre DRAGON_invalid) >= 1) and 
      ((pre DRAGON_dirty) = 0)) and 
      ((pre DRAGON_shared) = 0)) and 
      ((pre DRAGON_exclusive) = 0)) and 
      ((pre DRAGON_shared_dirty) = 0));

   DRAGON_g08 = (((pre DRAGON_invalid) >= 1) and 
      (((((pre DRAGON_dirty) + (pre DRAGON_shared)) + (pre DRAGON_exclusive)) + (pre DRAGON_shared_dirty)) >= 1));

   DRAGON_g09 = ((pre DRAGON_dirty) >= 1);

   DRAGON_g10 = ((pre DRAGON_shared) >= 1);

   DRAGON_g11 = ((pre DRAGON_shared_dirty) >= 1);

   DRAGON_g12 = ((pre DRAGON_exclusive) >= 1);

   DRAGON_exclusive = (0 -> 
      (if e01
         then 
               (if DRAGON_g01
                  then ((pre DRAGON_exclusive) + 1)
                  else (pre DRAGON_exclusive))
         else 
      (if e02
         then 
               (if DRAGON_g02
                  then 0
                  else (pre DRAGON_exclusive))
         else 
      (if e03
         then 
               (if DRAGON_g03
                  then ((pre DRAGON_exclusive) - 1)
                  else (pre DRAGON_exclusive))
         else 
      (if e08
         then 
               (if DRAGON_g08
                  then 0
                  else (pre DRAGON_exclusive))
         else 
      (if e12
         then 
               (if DRAGON_g12
                  then ((pre DRAGON_exclusive) - 1)
                  else (pre DRAGON_exclusive))
         else (pre DRAGON_exclusive)))))));

   DRAGON_shared = (0 -> 
      (if e02
         then 
               (if DRAGON_g02
                  then (((pre DRAGON_shared) + (pre DRAGON_exclusive)) + 1)
                  else (pre DRAGON_shared))
         else 
      (if e05
         then 
               (if DRAGON_g05
                  then 0
                  else (pre DRAGON_shared))
         else 
      (if e06
         then 
               (if DRAGON_g06
                  then (((pre DRAGON_shared) + (pre DRAGON_shared_dirty)) - 1)
                  else (pre DRAGON_shared))
         else 
      (if e08
         then 
               (if DRAGON_g08
                  then ((((pre DRAGON_shared) + (pre DRAGON_exclusive)) + (pre DRAGON_shared_dirty)) + (pre DRAGON_dirty))
                  else (pre DRAGON_shared))
         else 
      (if e10
         then 
               (if DRAGON_g10
                  then ((pre DRAGON_shared) - 1)
                  else (pre DRAGON_shared))
         else (pre DRAGON_shared)))))));

   DRAGON_shared_dirty = (0 -> 
      (if e02
         then 
               (if DRAGON_g02
                  then ((pre DRAGON_shared_dirty) + (pre DRAGON_dirty))
                  else (pre DRAGON_shared_dirty))
         else 
      (if e04
         then 
               (if DRAGON_g04
                  then 0
                  else (pre DRAGON_shared_dirty))
         else 
      (if e06
         then 
               (if DRAGON_g06
                  then 1
                  else (pre DRAGON_shared_dirty))
         else 
      (if e08
         then 
               (if DRAGON_g08
                  then 1
                  else (pre DRAGON_shared_dirty))
         else 
      (if e11
         then 
               (if DRAGON_g11
                  then ((pre DRAGON_shared_dirty) - 1)
                  else (pre DRAGON_shared_dirty))
         else (pre DRAGON_shared_dirty)))))));

   DRAGON_dirty = (0 -> 
      (if e02
         then 
               (if DRAGON_g02
                  then 0
                  else (pre DRAGON_dirty))
         else 
      (if e03
         then 
               (if DRAGON_g03
                  then ((pre DRAGON_dirty) + 1)
                  else (pre DRAGON_dirty))
         else 
      (if e04
         then 
               (if DRAGON_g04
                  then ((pre DRAGON_dirty) + 1)
                  else (pre DRAGON_dirty))
         else 
      (if e05
         then 
               (if DRAGON_g05
                  then ((pre DRAGON_dirty) + 1)
                  else (pre DRAGON_dirty))
         else 
      (if e07
         then 
               (if DRAGON_g07
                  then ((pre DRAGON_dirty) + 1)
                  else (pre DRAGON_dirty))
         else 
      (if e08
         then 
               (if DRAGON_g08
                  then 0
                  else (pre DRAGON_dirty))
         else 
      (if e09
         then 
               (if DRAGON_g09
                  then ((pre DRAGON_dirty) - 1)
                  else (pre DRAGON_dirty))
         else (pre DRAGON_dirty)))))))));

   DRAGON_invalid = (DRAGON_mem_init -> 
      (if e01
         then 
               (if DRAGON_g01
                  then ((pre DRAGON_invalid) - 1)
                  else (pre DRAGON_invalid))
         else 
      (if e02
         then 
               (if DRAGON_g02
                  then ((pre DRAGON_invalid) - 1)
                  else (pre DRAGON_invalid))
         else 
      (if e07
         then 
               (if DRAGON_g07
                  then ((pre DRAGON_invalid) - 1)
                  else (pre DRAGON_invalid))
         else 
      (if e08
         then 
               (if DRAGON_g08
                  then ((pre DRAGON_invalid) - 1)
                  else (pre DRAGON_invalid))
         else 
      (if e09
         then 
               (if DRAGON_g09
                  then ((pre DRAGON_invalid) + 1)
                  else (pre DRAGON_invalid))
         else 
      (if e10
         then 
               (if DRAGON_g10
                  then ((pre DRAGON_invalid) + 1)
                  else (pre DRAGON_invalid))
         else 
      (if e11
         then 
               (if DRAGON_g11
                  then ((pre DRAGON_invalid) + 1)
                  else (pre DRAGON_invalid))
         else 
      (if e12
         then 
               (if DRAGON_g12
                  then ((pre DRAGON_invalid) + 1)
                  else (pre DRAGON_invalid))
         else (pre DRAGON_invalid))))))))));

   Sofar_X = (((((((((((((((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12)) or 
      (((((((((((e01 and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      e02) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      e03) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      e04) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      e05) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      e06) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      e07) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      e08) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      e09) and 
      (not e10)) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      e10) and 
      (not e11)) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      e11) and 
      (not e12))) or 
      ((((((((((((not e01) and 
      (not e02)) and 
      (not e03)) and 
      (not e04)) and 
      (not e05)) and 
      (not e06)) and 
      (not e07)) and 
      (not e08)) and 
      (not e09)) and 
      (not e10)) and 
      (not e11)) and 
      e12)) and 
      (init_invalid > 0));

   Sofar_Sofar = (Sofar_X -> (Sofar_X or 
      (pre Sofar_Sofar)));

   OK = ((not Sofar_Sofar) or 
      ((DRAGON_dirty < 1) or 
      (DRAGON_shared < 1)));

tel;


