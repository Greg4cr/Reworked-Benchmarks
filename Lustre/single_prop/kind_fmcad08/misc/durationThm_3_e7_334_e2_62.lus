
node top(k0: int; 
      m0: int; 
      p: bool; 
      q: bool)
   returns (OK: bool);

var
   Sofar_X: bool; 
   Sofar_Sofar: bool; 
   Age_age_of_p2: int; 
   Age_age_of_p1: int; 
   Age_age_of_p: int; 
   k: int; 
   m: int;


let 
   k = (k0 -> (pre k));

   m = (m0 -> (pre m));

   Sofar_X = ((((k >= 1) and 
      (m >= 1)) and 
      ((not (Age_age_of_p >= k)) or 
      q)) and 
      (Age_age_of_p1 <= m));

   Sofar_Sofar = (Sofar_X -> (Sofar_X or 
      (pre Sofar_Sofar)));

   OK = ((not Sofar_Sofar) or 
      (Age_age_of_p2 <= (k + m)));

   Age_age_of_p2 = (0 -> 
      (if (pre p)
         then (((pre Age_age_of_p2) - 1) + 1)
         else 0));

   Age_age_of_p1 = (0 -> 
      (if (pre q)
         then (((pre Age_age_of_p1) - 1) + 1)
         else 0));

   Age_age_of_p = (0 -> 
      (if (pre p)
         then (((pre Age_age_of_p) - 1) + 1)
         else 0));

tel;


