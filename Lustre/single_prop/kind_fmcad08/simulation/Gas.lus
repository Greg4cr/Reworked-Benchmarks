
node top(leak: bool; 
      P1: bool)
   returns (OK: bool);

var
   Age_Count3: int; 
   Dursince_Count: int; 
   Age_Count2: int; 
   Age_Count1: int; 
   RaisingEdge_res: bool; 
   Sofar_X: bool; 
   Sofar_Sofar: bool; 
   Age_Count: int;


let 
   OK = ((not (Sofar_Sofar and 
      ((not RaisingEdge_res) or 
      (300 <= Age_Count1)))) or 
      ((Age_Count2 <= 600) or 
      ((2 * Dursince_Count) <= Age_Count3)));

   Age_Count3 = (0 -> 
      (if (pre (not P1))
         then ((pre Age_Count3) + 1)
         else 0));

   Dursince_Count = (0 -> 
      (if (pre P1)
         then 0
         else 
      (if (pre leak)
         then ((pre Dursince_Count) + 1)
         else (pre Dursince_Count))));

   Age_Count2 = (0 -> 
      (if (pre (not P1))
         then ((pre Age_Count2) + 1)
         else 0));

   Age_Count1 = (0 -> 
      (if (pre (not leak))
         then ((pre Age_Count1) + 1)
         else 0));

   RaisingEdge_res = (false -> ((not (pre P1)) and 
      P1));

   Sofar_X = (Age_Count <= 10);

   Sofar_Sofar = (Sofar_X -> (Sofar_X and 
      (pre Sofar_Sofar)));

   Age_Count = (0 -> 
      (if (pre leak)
         then ((pre Age_Count) + 1)
         else 0));

tel;


