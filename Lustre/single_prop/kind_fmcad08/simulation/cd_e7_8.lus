
node top(diff: int)
   returns (OK: bool);

var
   Controller_speed: int; 
   Environment_ok: bool; 
   Property_cpt: int; 
   Property_ok: bool; 
   Sofar_X: bool; 
   Sofar_Sofar: bool;


let 
   Controller_speed = (0 -> ((pre Controller_speed) + diff));

   Environment_ok = (((((-4) <= diff) and 
      (diff <= 4)) and 
      
      (if (true -> (pre (Controller_speed <= 9)))
         then (diff >= 1)
         else true)) and 
      
      (if (false -> (pre (Controller_speed >= 11)))
         then (diff <= (-1))
         else true));

   OK = ((not Sofar_Sofar) or 
      Property_ok);

   Property_cpt = (0 -> 
      (if ((8 <= Controller_speed) and 
         (Controller_speed <= 12))
         then 0
         else ((pre Property_cpt) + 1)));

   Property_ok = (true -> ((pre Property_cpt) <= 7));

   Sofar_X = ((Environment_ok and 
      (0 <= Controller_speed)) and 
      (Controller_speed < 16));

   Sofar_Sofar = (Sofar_X -> (Sofar_X or 
      (pre Sofar_Sofar)));

tel;


