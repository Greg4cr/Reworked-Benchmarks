
node top(beacon: bool; 
      second: bool)
   returns (OK: bool);

var
   counter_incr: int; 
   counter_pc: int; 
   counter_c: int; 
   speed_late: bool; 
   speed_early: bool;


let 
   counter_incr = 
      (if (beacon and 
         (not second))
         then 1
         else 
      (if (second and 
         (not beacon))
         then (-1)
         else 0));

   counter_pc = (0 -> (pre counter_c));

   counter_c = 
      (if false
         then 0
         else 
      (if (((beacon or 
         second) and 
         (counter_pc > (-1000))) and 
         (counter_pc < 1000))
         then (counter_pc + counter_incr)
         else counter_pc));

   speed_early = (false -> 
      (if (pre speed_early)
         then (counter_c > 0)
         else (counter_c >= 10)));

   speed_late = (false -> 
      (if (pre speed_late)
         then (counter_c < 0)
         else (counter_c <= (-10))));

   OK = (((not (speed_late and 
      speed_early)) and 
      (true -> (not (speed_late and 
      (pre speed_early))))) and 
      (true -> (not ((pre speed_late) and 
      speed_early))));

tel;


